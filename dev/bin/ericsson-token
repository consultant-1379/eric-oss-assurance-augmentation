#!/bin/bash
# ------------------------------------------------------------------
# [Yongqinchuan] Bash script to get encrypted passwrod and token
# ------------------------------------------------------------------
set -Eeuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

# Section: Utility FUNCTIONS {{{1
# --------------------------------------------------------------------------

cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
}

setup_colors() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' ORANGE='\033[0;33m' BLUE='\033[0;34m' PURPLE='\033[0;35m' CYAN='\033[0;36m' YELLOW='\033[1;33m'
  else
    NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
  fi
}

confirm() {
    echo "Continue? y or n? "
    read -r REPLY
    case $REPLY in
    [Yy]) echo 'Continue' ;;
    [Nn]) break && exit ;;
    *) confirm ;;
    esac
}

msg() {
  echo >&2 -e "${1-}${NOFORMAT}"
}

msgt() {
  echo >&2 -e "[$(date +"%H:%M:%S")]${1-}${NOFORMAT}"
}

die() {
  local msg=$1
  local code=${2-1} # default exit status 1
  msg "$msg"
  exit "$code"
}

setup_colors

# Section: Main Script logic {{{1
# --------------------------------------------------------------------------

gsignum=$USER
gencpass=""
seli_apitoken=""

rnd_gencpass=""
rnd_apitoken=""

get_encrypt_password() {
  msg "${YELLOW}Get encrypted password from ARM SELI\n"
  gencpass=$(curl -u "$gsignum"  https://arm.seli.gic.ericsson.se/artifactory/api/security/encryptedPassword)
}


get_rnd_encrypt_password() {
  msg "${YELLOW}Get encrypted password from ARM RND\n"
  rnd_gencpass=$(curl -u "$gsignum"  https://arm.rnd.ki.sw.ericsson.se/artifactory/api/security/encryptedPassword)
}

get_or_create_api_token() {
    msg " "
    msg "${YELLOW}Attempting to get the API token from ARM"
    msg " "
    get_api_token=$(curl -u "$gsignum:$gencpass" --silent https://arm.seli.gic.ericsson.se/artifactory/api/security/apiKey)
    if [ "$get_api_token" = '{}' ]; then
       echo "No existing API Token exists... Generating"
       get_api_token=$(curl -u "$gsignum:$gencpass" -X POST https://arm.seli.gic.ericsson.se/artifactory/api/security/apiKey)
    fi
    msg " "
    seli_apitoken=$(echo "$get_api_token" | jq -r '.apiKey')
    msg "${ORANGE}The API Token from ARM has been successfully retrieved"


}

get_rnd_or_create_api_token() {
    msg " "
    msg "${YELLOW}Attempting to get the API token from ARM RND"
    msg " "
    get_api_token=$(curl -u "$gsignum:$rnd_gencpass" --silent https://arm.rnd.ki.sw.ericsson.se/artifactory/api/security/apiKey)
    if [ "$get_api_token" = '{}' ]; then
       echo "No existing API Token exists... Generating"
       get_api_token=$(curl -u "$gsignum:$rnd_gencpass" -X POST https://arm.rnd.ki.sw.ericsson.se/artifactory/api/security/apiKey)
    fi
    msg " "
    rnd_apitoken=$(echo "$get_api_token" | jq -r '.apiKey')
    msg "${ORANGE}The API Token from ARM has been successfully retrieved"


}

get_encrypt_password
get_or_create_api_token

get_rnd_encrypt_password
get_rnd_or_create_api_token

msg ""
msg "Encrypted seli encrypted password: ${GREEN}$gencpass"
msg "Retrieved seli API Token:          ${GREEN}$seli_apitoken"
msg ""
msg "Encrypted rnd encrypted password:  ${GREEN}$rnd_gencpass"
msg "Retrieved rnd API Token:           ${GREEN}$rnd_apitoken"
